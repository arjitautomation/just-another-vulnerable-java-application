# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- group: Snyk 

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonarcloud'
    organization: 'srivasarjit'
    scannerMode: 'Other'
    extraProperties: |
      # Additional properties that will be passed to the scanner,
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.projectKey=srivasarjit_DevOps-Project
      sonar.projectName=DevOps Project
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'

- task: CopyFiles@2
  inputs:
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

#- task: Bash@3
#  continueOnError: true
#  inputs:
#    targetType: 'inline'
#    script: |
#      SNYK_TOKEN= $(SNYK_TOKEN)
#      export SNYK_TOKEN
#      mvn snyk:test
#  displayName: Snyk test

- task: SnykSecurityScan@1
  continueOnError: true
  inputs:
    serviceConnectionEndpoint: 'snyk'
    testType: 'app'
    monitorWhen: 'always'
    failOnIssues: true
- task: Docker@2
  inputs:
    containerRegistry: 'arjitdocker'
    repository: 'arjitks77/devsecops'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'